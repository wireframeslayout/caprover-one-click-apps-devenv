captainVersion: 4
services:
    $$cap_appname:
        environment:
            PHP_VERSION: $$cap_php_version
            NON_ROOT_USER_ID: $$cap_user_id
            NON_ROOT_GROUP: $$cap_group_id
        caproverExtra:
            dockerfileLines:
                - FROM php:$$cap_php_version-fpm-alpine AS php-system-setup
                - RUN apk add --no-cache dcron busybox-suid libcap curl zip unzip git
                - COPY --from=mlocati/php-extension-installer /usr/bin/install-php-extensions /usr/bin/
                - RUN install-php-extensions intl bcmath gd pdo_mysql pdo_pgsql opcache redis uuid exif pcntl zip
                - COPY --from=ochinchina/supervisord:latest /usr/local/bin/supervisord /usr/local/bin/supervisord
                - COPY --from=caddy:2.2.1 /usr/bin/caddy /usr/local/bin/caddy
                - RUN setcap 'cap_net_bind_service=+ep' /usr/local/bin/caddy
                - COPY --from=composer/composer:2 /usr/bin/composer /usr/local/bin/composer
                - FROM php-system-setup AS app-setup
                - ENV APP_PATH=/srv/app
                - WORKDIR $APP_PATH
                - ARG NON_ROOT_GROUP=${NON_ROOT_GROUP:-app}
                - ARG NON_ROOT_GROUP_ID=${NON_ROOT_GROUP_ID:-1000}
                - ARG NON_ROOT_USER=${NON_ROOT_USER:-app}
                - ARG NON_ROOT_USER_ID=${NON_ROOT_USER_ID:-1000}
                - RUN addgroup -S $NON_ROOT_GROUP -g $NON_ROOT_GROUP_ID  && adduser -S $NON_ROOT_USER -u $NON_ROOT_USER_ID -G $NON_ROOT_GROUP
                - RUN addgroup $NON_ROOT_USER wheel
                - RUN touch /etc/crontabs/$NON_ROOT_USER
                - RUN echo "* * * * * /usr/local/bin/php /srv/app/artisan schedule:run > /proc/1/fd/1 2>/proc/1/fd/2" >>  /etc/crontabs/$NON_ROOT_USER
                - RUN chmod 777 /usr/sbin/crond
                - RUN chown -R $NON_ROOT_USER:$NON_ROOT_GROUP /etc/crontabs/$NON_ROOT_USER && setcap cap_setgid=ep /usr/sbin/crond
                - RUN chown -R $NON_ROOT_USER:$NON_ROOT_GROUP $APP_PATH
                - RUN touch /usr/local/etc/php/conf.d/local.ini
                - >-
                    RUN {
                    echo -e "memory_limit = $$cap_memory_limit\n"; 
                    echo -e "max_execution_time = $$cap_execution_time\n";
                    echo -e "upload_max_filesize = $$cap_max_filesize\n";
                    echo -e "post_max_size = $$cap_post_max_size\n";
                    } > /usr/local/etc/php/conf.d/local.ini
                - RUN touch /entrypoint.sh && chown $NON_ROOT_USER:$NON_ROOT_GROUP /entrypoint.sh
                - RUN touch /Caddyfile && chown $NON_ROOT_USER:$NON_ROOT_GROUP /Caddyfile
                - RUN touch /supervisor.conf && chown $NON_ROOT_USER:$NON_ROOT_GROUP /supervisor.conf
                - USER $NON_ROOT_USER
                - >-
                    RUN {
                    echo -e "#!/bin/sh\n";
                    echo -e "\n";
                    echo -e "echo \"entrypoint.sh: [$(whoami)] [PHP $(php -r 'echo phpversion();')]\"\n";
                    echo -e "echo \"start supervisord\"\n";
                    echo -e "supervisord -c /supervisor.conf\n";
                    } > /entrypoint.sh
                - >-
                    RUN {
                    echo -e "[supervisord]\n";
                    echo -e "logfile=/dev/null\n";
                    echo -e "logfile_maxbytes=0\n";
                    echo -e "logfile_backups=0\n";
                    echo -e "loglevel=info\n";
                    echo -e "nodaemon=true\n";
                    echo -e "\n";
                    echo -e "[program:php-fpm]\n";
                    echo -e "command=php-fpm --nodaemonize\n";
                    echo -e "autorestart=true\n";
                    echo -e "stdout_events_enabled=true\n";
                    echo -e "stderr_events_enabled=true\n";
                    echo -e "stdout_logfile_maxbytes=0\n";
                    echo -e "stderr_logfile_maxbytes=0\n";
                    echo -e "stdout_logfile=/dev/stdout\n";
                    echo -e "stderr_logfile=/dev/stderr\n";
                    echo -e "\n";
                    echo -e "[program:caddy]\n";
                    echo -e "command=caddy run --config /Caddyfile\n";
                    echo -e "autorestart=true\n";
                    echo -e "stdout_events_enabled=true\n";
                    echo -e "stderr_events_enabled=true\n";
                    echo -e "stdout_logfile_maxbytes=0\n";
                    echo -e "stderr_logfile_maxbytes=0\n";
                    echo -e "stdout_logfile=/dev/stdout\n";
                    echo -e "stderr_logfile=/dev/stderr\n";
                    echo -e "\n";
                    echo -e "[program:cron]\n";
                    echo -e "command=crond -l 2 -f\n";
                    echo -e "autorestart=true\n";
                    } > /supervisor.conf
                - >-
                    RUN {
                    echo -e ":80 {\n";
                    echo -e "    root * /srv/app/public\n";
                    echo -e "\n";
                    echo -e "    @websockets {\n";
                    echo -e "        header Connection *upgrade*\n";
                    echo -e "        header Upgrade    websocket\n";
                    echo -e "    }\n";
                    echo -e "    reverse_proxy @websockets 127.0.0.1:6001 {\n";
                    echo -e "        header_down -X-Powered-By\n";
                    echo -e "    }\n";
                    echo -e "\n";
                    echo -e "    redir /index.php / 308\n";
                    echo -e "    redir /index.php/ / 308\n";
                    echo -e "    route /index.php/* {\n";
                    echo -e "        uri strip_prefix /index.php\n";
                    echo -e "        redir {path} 308\n";
                    echo -e "    }\n";
                    echo -e "\n";
                    echo -e "    php_fastcgi 127.0.0.1:9000\n";
                    echo -e "    encode gzip\n";
                    echo -e "    header -X-Powered-By\n";
                    echo -e "    file_server\n";
                    echo -e "    log\n";
                    echo -e "}\n";
                    } > /Caddyfile
                - EXPOSE 80
                - ENTRYPOINT ["sh", "/entrypoint.sh"]
        volumes:
            - $$cap_env_path:/srv/app
        restart: always
caproverOneClickApp:
    variables:
        - id: $$cap_php_version
          label: php version
          defaultValue: '8.0'
        - id: $$cap_env_path
          label: development directory
          defaultValue: '/var/www/your-app-name'
          description: set your development directory
        - id: $$cap_memory_limit
          label: PHP memory limit size
          defaultValue: '512M'
        - id: $$cap_execution_time
          label: PHP execution time
          defaultValue: '30'
        - id: $$cap_max_filesize
          label: PHP max file size
          defaultValue: '30M'
        - id: $$cap_post_max_size
          label: PHP post max size
          defaultValue: '35M'
        - id: $$cap_user_id
          label: application user id
          defaultValue: '1000'
        - id: $$cap_group_id
          label: application group id
          defaultValue: '1000'
    instructions:
        start: >-
            Laravelのリモート開発環境用のための One Click App です<br />
            データベースは含まれていませんので、自身でMySQLのサービスを立ち上げてください<br />
        end: >-
            完了しました 😄
            http://$$cap_appname.$$cap_root_domain
    displayName: 'Laravel開発環境'
    isOfficial: false
    description: this is discription
